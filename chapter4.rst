Глава 4. Соединение сервисов
----------------------------

  Обмен сообщениями между сервисами осуществляется с помощью стандартного ``IP``, таким образом сервисы становятся независимыми друг от друга и могут крутиться на разных машинках. Самыми распространёнными на сегодняшний момент являются два протокола обмена данными между процессами: ``TCP`` и ``UDP``, они же реализованы и в библиотеке ``tll``

|

UDP - User Datagram Protocol
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	- Является более простой версией по сравнению с ``TCP``, поэтому начнём с него
	- Сам протокол состоит из заголовка ( порт отправителя, порт получателя, длина данного сообщения, контрольная сумма ) и передаваемых данных. Каждое поле заголовка занимает 2 байта, весь заголовок - 8
	- Протокол **НЕ ПОДРАЗУМЕВАЕТ** 

	  - Проверку существования получателя сообщения с конкретным адрес-портом
	  - Проверку готовности получателя принимать сообщения
	  - Проверку корректности принятых данных получателем
	  - Проверку того, что получатель принимает данные в таком же порядке, в котором они были отправлены
	  - Проверку того, что отправленные пакеты не потерялись
	  
	- Грубо говоря, ``UDP`` позволяет отправлять по конкретному адрес-порту сообщения в надежде на то, что их там корректно примут, с осознанием того, что часть сообщений может быть потеряна или доставлена в другом порядке
	- Про протокол можно почитать `по ссылке <https://datatracker.ietf.org/doc/html/rfc768>`_

TCP - Transmission Control Protocol
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	- Более сложный протокол, который **ПОДРАЗУМЕВАЕТ** и **ПОЗВОЛЯЕТ** выполнение функций, описанных в ``UDP``
	- Протокол состоит из заголовка ( порт отправителя, порт получателя, ... ) и передаваемых данных. Сам заголовок содержит гораздо больше полей, чем ``UDP``, что и позволяет протоколу выполнять более сложные операции. Длина заголовка составляет от 20 до 60 байт
	- Перед тем, как отправлять полезные сообщения получателю, отправитель должен установить с ним соединение с помощью процесса ``рукопожатия``, после которого обе стороны готовы обмениваться данными
	- Получатель подтверждает каждое полученное сообщение, если этого не произошло ( пакет потерян ), то отправить через какое-то время повторит отправку
	- Сообщения содержат порядковый номер, таким образом получатель может восстановить правильный порядок полученных сообщений
	- Окончание сеанса обмена сообщениями тоже происходит с помощью специального процесса, похожего на ``рукопожатие``. Таким образом обе стороны понимают, что обмен данными закончился корректно, а не по причине случайный разрыва соединения
	- Про протокол можно почитать `по ссылке <https://datatracker.ietf.org/doc/html/rfc793>`_

TCP vs UDP
^^^^^^^^^^